{"version":3,"sources":["visitor/guides/Guides.js","redux/actions.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","p","useStyles","makeStyles","theme","card","margin","borderRadius","justifyContent","details","flexDirection","padding","tabs","paddingTop","tab","alignItems","panel","guides","markdownURL","sections","label","mapDispatchToProps","fetchMarkdown","url","dispatch","a","axios","get","response","markdown","data","type","ActionTypes","payload","error","message","console","log","JSON","parse","stringify","connect","state","history","useHistory","classes","React","useState","tabIndex","setTabIndex","useParams","guideId","guide","sectionId","section","find","sectionIndex","findIndex","guideMarkdownURL","guideSections","useEffect","to","Fragment","Grid","container","item","xs","md","Card","variant","className","CardContent","Tabs","orientation","onChange","event","newTabIndex","push","map","Tab","source"],"mappings":"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","file":"static/js/2.2f9ec35b.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams, useHistory, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ReactMarkdown from \"react-markdown\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}> {children}</Box>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: 24,\n        borderRadius: 0,\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        flexDirection: \"column\",\n        padding: 0,\n    },\n    tabs: {\n        margin: 0,\n        paddingTop: 24,\n    },\n    tab: {\n        alignItems: \"flex-start\",\n        margin: 0,\n    },\n    panel: {\n        margin: 0,\n    },\n}));\n\nconst guides = [\n    {\n        id: \"accounts\",\n        markdownURL: \"/guides/accounts/accounts.md\",\n        sections: [\n            {\n                label: \"Create Account\",\n                markdownURL: \"/guides/accounts/create-account.md\",\n                id: \"create-account\",\n            },\n            {\n                label: \"Edit Account\",\n                markdownURL: \"/guides/accounts/edit-account.md\",\n                id: \"edit-account\",\n            },\n            {\n                label: \"Delete Account\",\n                markdownURL: \"/guides/accounts/delete-account.md\",\n                id: \"delete-account\",\n            },\n        ],\n    },\n    {\n        id: \"subscriptions\",\n        markdownURL: \"/guides/subscriptions/subscriptions.md\",\n        sections: [\n            {\n                label: \"Create Subscription\",\n                markdownURL: \"/guides/subscriptions/create-subscription.md\",\n                id: \"create-subscription\",\n            },\n            {\n                label: \"Edit Subscription\",\n                markdownURL: \"/guides/subscriptions/edit-subscription.md\",\n                id: \"edit-subscription\",\n            },\n            {\n                label: \"Delete Subscription\",\n                markdownURL: \"/guides/subscriptions/delete-subscription.md\",\n                id: \"delete-subscription\",\n            },\n        ],\n    },\n    {\n        id: \"transactions\",\n        markdownURL: \"/guides/transactions/transactions.md\",\n        sections: [\n            {\n                label: \"Create Transactions\",\n                markdownURL: \"/guides/transactions/create-transaction.md\",\n                id: \"create-transaction\",\n            },\n            {\n                label: \"Edit Transactions\",\n                markdownURL: \"/guides/transactions/edit-transaction.md\",\n                id: \"edit-transaction\",\n            },\n            {\n                label: \"Delete Transactions\",\n                markdownURL: \"/guides/transactions/delete-transaction.md\",\n                id: \"delete-transaction\",\n            },\n        ],\n    },\n    {\n        id: \"plans\",\n        markdownURL: \"/guides/plans/plans.md\",\n        sections: [\n            {\n                label: \"Create Plans\",\n                markdownURL: \"/guides/plans/create-plan.md\",\n                id: \"create-plan\",\n            },\n            {\n                label: \"Edit Plans\",\n                markdownURL: \"/guides/plans/edit-plan.md\",\n                id: \"edit-plan\",\n            },\n            {\n                label: \"Delete Plans\",\n                markdownURL: \"/guides/plans/delete-plan.md\",\n                id: \"delete-plan\",\n            },\n        ],\n    },\n    {\n        id: \"invoices\",\n        markdownURL: \"/guides/invoices/invoices.md\",\n        sections: [\n            {\n                label: \"Create Invoice\",\n                markdownURL: \"/guides/invoices/create-invoice.md\",\n                id: \"create-invoice\",\n            },\n            {\n                label: \"Edit Invoice\",\n                markdownURL: \"/guides/invoices/edit-invoice.md\",\n                id: \"edit-invoice\",\n            },\n            {\n                label: \"Delete Invoice\",\n                markdownURL: \"/guides/invoices/delete-invoice.md\",\n                id: \"delete-invoice\",\n            },\n        ],\n    },\n];\n\nfunction Guides(props) {\n    const history = useHistory();\n    const classes = useStyles();\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const { fetchMarkdown, markdown } = props;\n    const { guide: guideId, section: sectionId } = useParams();\n\n    const guide = guides.find((guide) => guide.id === guideId);\n    let sectionIndex = -1;\n    if (guide) {\n        if (sectionId) {\n            sectionIndex = guide.sections.findIndex(\n                (section) => section.id === sectionId\n            );\n        }\n    }\n\n    const guideMarkdownURL = guide ? guide.markdownURL : null;\n    const guideSections = guide ? guide.sections : null;\n\n    useEffect(() => {\n        if (guideId && guide) {\n            if (sectionIndex >= 0) {\n                setTabIndex(sectionIndex);\n                fetchMarkdown(guide.sections[sectionIndex].markdownURL);\n            } else {\n                fetchMarkdown(guideMarkdownURL);\n            }\n        }\n    }, [\n        guideId,\n        sectionId,\n        sectionIndex,\n        setTabIndex,\n        fetchMarkdown,\n        guide,\n        guideMarkdownURL,\n        guideSections,\n    ]);\n\n    if (!guide || (sectionId && sectionIndex < 0)) {\n        return <Redirect to=\"/error/404\" />;\n    }\n\n    const handleTabChange = (event, newTabIndex) => {\n        const section = guide.sections[newTabIndex];\n        history.push(`/guides/${guide.id}/${section.id}`);\n    };\n\n    return (\n        <React.Fragment>\n            {markdown && (\n                <Grid container={true}>\n                    <Grid item={true} xs={12} md={2}>\n                        <Card variant=\"outlined\" className={classes.card}>\n                            <CardContent className={classes.details}>\n                                <Tabs\n                                    orientation=\"vertical\"\n                                    variant=\"fullWidth\"\n                                    value={tabIndex}\n                                    onChange={handleTabChange}\n                                    className={classes.tabs}\n                                >\n                                    {guide.sections.map((section) => (\n                                        <Tab label={section.label} />\n                                    ))}\n                                </Tabs>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item={true} xs={12} md={10}>\n                        {guide.sections.map((section, index) => (\n                            <TabPanel value={tabIndex} index={index}>\n                                {tabIndex === index && (\n                                    <ReactMarkdown source={markdown} />\n                                )}\n                            </TabPanel>\n                        ))}\n                        {tabIndex === -1 && <ReactMarkdown source={markdown} />}\n                    </Grid>\n                </Grid>\n            )}\n            {!markdown && \"Loading...\"}\n        </React.Fragment>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        markdown: state.markdown,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchMarkdown: actions.fetchMarkdown,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Guides);\n","import * as ActionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nfunction handleError(dispatch, error, message) {\n    /* By default, if an instance of the Error class is printed, a lot of information is hidden.\n     * Therefore, we convert it to a regular object and then print it.\n     */\n    console.log(JSON.parse(JSON.stringify(error)));\n    console.log(message);\n}\n\nexport function fetchMarkdown(url) {\n    return async (dispatch) => {\n        try {\n            const response = await axios.get(url);\n            dispatch(fetchMarkdownComplete(response.data));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch markdown file!\");\n        }\n    };\n}\n\nexport function fetchMarkdownComplete(markdown) {\n    return {\n        type: ActionTypes.FETCH_MARKDOWN_COMPLETE,\n        payload: markdown,\n    };\n}\n"],"sourceRoot":""}